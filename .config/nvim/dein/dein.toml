[[plugins]]
repo     = 'Shougo/dein.vim'
hook_add = '''
" let g:dein#install_log_filename='$HOME/.cache/dein/install.log'
'''

[[plugins]]
repo     = 'editorconfig/editorconfig-vim'
hook_add = '''
if has('nvim')
    let g:EditorConfig_core_mode = 'external_command'
endif
'''

[[plugins]]
repo     = 'cocopon/vaffle.vim'
hook_add = '''
let g:vaffle_auto_cd = 1
let g:vaffle_show_hidden_files = 1
nnoremap <Space>v :<C-u>Vaffle<CR>
'''

[[plugins]]
repo     = 'cocopon/iceberg.vim'
hook_add = '''
autocmd MyAutoCmd ColorScheme * hi! icebergLLNormal ctermfg=234 ctermbg=110 guifg=#161821 guibg=#84a0c6
autocmd MyAutoCmd ColorScheme * hi! icebergLLInsert ctermfg=234 ctermbg=150 guifg=#161821 guibg=#b4be82
autocmd MyAutoCmd ColorScheme * hi! icebergLLVisual ctermfg=234 ctermbg=140 guifg=#161821 guibg=#a093c7
autocmd MyAutoCmd ColorScheme * hi! icebergLLReplace ctermfg=234 ctermbg=109 guifg=#161821 guibg=#89b8c2
autocmd MyAutoCmd ColorScheme * hi! icebergLLGradient ctermfg=234 ctermbg=245 guifg=#17171b guibg=#818596
autocmd MyAutoCmd ColorScheme * hi! icebergLLEdge ctermfg=243 ctermbg=237 guifg=#696d80 guibg=#34394e
autocmd MyAutoCmd ColorScheme * hi! icebergLLBase ctermfg=234 ctermbg=245 guifg=#17171b guibg=#818596
'''

[[plugins]]
repo     = 'tyru/caw.vim'
hook_add = '''
nmap <Space>c <Plug>(caw:hatpos:toggle)
vmap <Space>c <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo     = 'itchyny/lightline.vim'
depends  = ['iceberg.vim']
hook_add = '''
let g:lightline = {
      \ 'colorscheme': 'iceberg',
      \ 'active': {
      \    'left': [
      \      [ 'mode', 'paste' ],
      \      [ 'readonly', 'fugitive', 'filename', 'modified' ],
      \    ]
      \ },
      \ 'component': {
      \   'lineinfo': "\ue0a1".'%3l:%-2v',
      \ },
      \ 'component_function': {
      \    'readonly': 'LightlineReadonly',
      \    'fugitive': 'LightlineFugitive',
      \ },
      \ 'separator': {'left': "\ue0b0", 'right': "\ue0b2"},
      \ 'subseparator': {'left': "\ue0b1", 'right': "\ue0b3"},
      \ }
function! LightlineReadonly()
    return &readonly ? "\ue0a2" : ''
endfunction
function! LightlineFugitive()
    if exists('*fugitive#head')
        let branch = fugitive#head()
        return branch !=# '' ? "\ue0a0".branch : ''
    endif
    return ''
endfunction
'''

[[plugins]]
repo     = 'Yggdroot/indentLine'

[[plugins]]
repo     = 'kannokanno/previm'

[[plugins]]
repo     = 'scrooloose/syntastic'
hook_add = '''
set statusline+=%#warningmsg#
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
'''

[[plugins]]
repo     = 'tpope/vim-fugitive'

[[plugins]]
repo     = 'cohama/lexima.vim'
hook_add = '''
inoremap <silent> <C-l> <C-r>=lexima#insmode#leave(1, '<LT>C-g>U<LT>Right>')<CR>
'''

[[plugins]]
repo     = 'fatih/vim-go'
on_ft    = 'go'
hook_add = '''
autocmd MyAutoCmd FileType go nnoremap gr (go-run)
autocmd MyAutoCmd FileType go nnoremap gt (go-test)
autocmd MyAutoCmd FileType go :highlight goErr cterm=bold ctermfg=214
autocmd MyAutoCmd FileType go :match goErr /\<err\>/
let g:go_hightlight_functions = 1
let g:go_hightlight_methods = 1
let g:go_hightlight_structs = 1
let g:go_hightlight_interfaces = 1
let g:go_hightlight_operators = 1
let g:go_hightlight_build_constraints = 1
let g:go_fmt_command = "goimports"
'''

[[plugins]]
repo     = 'cespare/vim-toml'
on_ft    = 'toml'

[[plugins]]
repo     = 'fuenor/qfixhowm'
hook_add = '''
let QFixHowm_Key = 'g'
let howm_filename = '%Y/%m/%Y-%m-%d-%H%M%S.md'
let QFixHowm_FileType = 'markdown'
let QFixHowm_Title = '#'
let QFixHowm_Template = [
  \"# %TAG%",
  \"%DATE%",
  \""]
'''

[[plugins]]
repo     = 'kassio/neoterm'
if       = 'has("nvim")'
hook_add = '''
nnoremap <silent> <Space>t :<C-u>Tnew<CR>
'''

[[plugins]]
repo     = 'junegunn/vim-easy-align'
hook_add = '''
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo     = 'junegunn/fzf.vim'
hook_add = '''
nnoremap <Space>p :<C-u>History<CR>
'''
