# plugin util
[[plugins]]
repo     = 'Shougo/dein.vim'
hook_add = '''
let g:dein#install_process_timeout = 600
'''

# UI
[[plugins]]
repo     = 'itchyny/lightline.vim'
depends  = ['iceberg.vim', 'lightline-bufferline', 'lightline-ale', 'gina.vim']
hook_add = '''
let g:lightline = {
    \ 'colorscheme': 'seoul256',
    \ 'active': {
    \    'left': [
    \      ['mode', 'paste'],
    \      ['readonly', 'modified', 'linter_errors', 'linter_warnings', 'linter_ok'],
    \    ],
    \    'right': [
    \      ['lineinfo', 'percent'],
    \      ['fileformat', 'fileencoding', 'filetype']
    \    ]
    \ },
    \ 'tabline': {
    \   'left': [['buffers']],
    \   'right': [['repository','branch','repostatus']]
    \ },
    \ 'component': {
    \   'lineinfo': "\ue0a1".'%3l:%-2v'
    \ },
    \ 'component_function': {
    \    'readonly': 'LightlineReadonly',
    \    'repository': 'gina#component#repo#name',
    \    'branch': 'LightlineBranch',
    \    'bufferinfo': 'lightline#buffer#bufferinfo',
    \    'repostatus': 'LightlineRepoStatus'
    \ },
    \ 'component_expand': {
    \   'buffers': 'lightline#bufferline#buffers',
    \   'linter_warnings': 'lightline#ale#warnings',
    \   'linter_errors': 'lightline#ale#errors',
    \   'linter_ok': 'lightline#ale#ok'
    \ },
    \ 'component_type': {
    \   'buffers': 'tabsel',
    \   'linter_warnings': 'warning',
    \   'linter_errors': 'error'
    \ },
    \ 'separator': {'left': "\ue0b0", 'right': "\ue0b2"},
    \ 'subseparator': {'left': "\ue0b1", 'right': "\ue0b3"}
    \ }
function! LightlineReadonly()
    return &readonly ? "\ue0a2" : ''
endfunction
function! LightlineBranch()
    let branch = gina#component#repo#branch()
    return branch !=# '' ? "\ue0a0".branch : ''
endfunction
function! LightlineRepoStatus()
    let ahead = gina#component#traffic#ahead() > 0 ?
                \ gina#component#traffic#ahead()."\u2191" : ''
    let behind = gina#component#traffic#behind() > 0 ?
                \ gina#component#traffic#behind()."\u2193" : ''
    let unstaged = gina#component#status#unstaged() > 0 ? ' +' : ''
    return behind.ahead.unstaged
endfunction
'''

[[plugins]]
repo     = 'mgee/lightline-bufferline'
hook_add = '''
nnoremap <C-n> :bn<CR>
nnoremap <C-p> :bp<CR>
'''

[[plugins]]
repo     = 'maximbaz/lightline-ale'
depends  = ['ale']

[[plugins]]
repo     = 'Yggdroot/indentLine'

[[plugins]]
repo     = 'lilydjwg/colorizer'

[[plugins]]
repo     = 'kana/vim-operator-user'

[[plugins]]
repo     = 'haya14busa/vim-operator-flashy'
hook_add = '''
map y <Plug>(operator-flashy)
nmap Y <Plug>(operator-flashy)$
let g:operator#flashy#flash_time = 300
let g:operator#flashy#group = 'Visual'
'''

[[plugins]]
repo     = 'mhinz/vim-startify'
hook_add = '''
nnoremap <silent> <Space>s :<C-u>Startify<CR>
'''

# colorscheme
# [[plugins]]
# repo     = 'cocopon/iceberg.vim'
# hook_add = '''
# autocmd MyAutoCmd ColorScheme * hi! icebergLLNormal   ctermfg=234 ctermbg=110 guifg=#161821 guibg=#84a0c6
# autocmd MyAutoCmd ColorScheme * hi! icebergLLInsert   ctermfg=234 ctermbg=150 guifg=#161821 guibg=#b4be82
# autocmd MyAutoCmd ColorScheme * hi! icebergLLVisual   ctermfg=234 ctermbg=140 guifg=#161821 guibg=#a093c7
# autocmd MyAutoCmd ColorScheme * hi! icebergLLReplace  ctermfg=234 ctermbg=109 guifg=#161821 guibg=#89b8c2
# autocmd MyAutoCmd ColorScheme * hi! icebergLLGradient ctermfg=234 ctermbg=245 guifg=#17171b guibg=#818596
# autocmd MyAutoCmd ColorScheme * hi! icebergLLEdge     ctermfg=243 ctermbg=237 guifg=#696d80 guibg=#34394e
# autocmd MyAutoCmd ColorScheme * hi! icebergLLBase     ctermfg=234 ctermbg=245 guifg=#17171b guibg=#818596
# '''
#
# [[plugins]]
# repo     = 'gilsondev/lizard'
#
[[plugins]]
repo     = 'baskerville/bubblegum'

# [[plugins]]
# repo     = 'w0ng/vim-hybrid'
#
# [[plugins]]
# repo     = 'morhetz/gruvbox'

# code check
[[plugins]]
repo     = 'scrooloose/syntastic'
if       = '!has("nvim") && ( !has("job") || !has("channel") || !has("timers") )'
hook_add = '''
set statusline+=%#warningmsg#
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list            = 1
let g:syntastic_check_on_open            = 1
let g:syntastic_check_on_wq              = 0
'''

[[plugins]]
repo     = 'w0rp/ale'
if       = 'has("nvim") || has("job") && has("channel") && has("timers")'
hook_add = '''
nmap <silent> <S-n> <Plug>(ale_next_wrap)
nmap <silent> <S-p> <Plug>(ale_previous_wrap)
let g:ale_linters = {
    \ 'ruby': ['rubocop'],
    \ }
let g:ale_fixers = {
    \ 'ruby': ['rubocop'],
    \ }
'''

[[plugins]]
repo     = 'airblade/vim-gitgutter'

#text input
[[plugins]]
repo     = 'editorconfig/editorconfig-vim'
# hook_add = '''
# if has('nvim')
#    let g:EditorConfig_core_mode = 'external_command'
# endif
# '''

[[plugins]]
repo     = 'cohama/lexima.vim'
hook_add = '''
inoremap <silent> <C-l> <C-r>=lexima#insmode#leave(1, '<LT>C-g>U<LT>Right>')<CR>
'''

[[plugins]]
repo     = 'junegunn/vim-easy-align'
hook_add = '''
vmap <CR> <Plug>(LiveEasyAlign)
'''

[[plugins]]
repo     = 'rhysd/accelerated-jk'
hook_add = '''
nmap j <Plug>(accelerated_jk_gj)
nmap k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo     = 'kana/vim-smartword'
on_map   = ['<Plug>(smartword-']
hook_add = '''
nmap w <Plug>(smartword-w)
nmap b <Plug>(smartword-b)
nmap e <Plug>(smartword-e)
nmap ge <Plug>(smartword-ge)
'''

[[plugins]]
repo     = 'haya14busa/vim-asterisk'
on_map   = ['<Plug>(asterisk-']
hook_add = '''
map *   <Plug>(asterisk-*)
map #   <Plug>(asterisk-#)
map g*  <Plug>(asterisk-g*)
map g#  <Plug>(asterisk-g#)
map z*  <Plug>(asterisk-z*)
map gz* <Plug>(asterisk-gz*)
map z#  <Plug>(asterisk-z#)
map gz# <Plug>(asterisk-gz#)
'''

[[plugins]]
repo     = 'haya14busa/is.vim'
hook_add = '''
map *  <Plug>(asterisk-z*)<Plug>(is-nohl-1)
map g* <Plug>(asterisk-gz*)<Plug>(is-nohl-1)
map #  <Plug>(asterisk-z#)<Plug>(is-nohl-1)
map g# <Plug>(asterisk-gz#)<Plug>(is-nohl-1)
'''

# file util
[[plugins]]
repo     = 'cocopon/vaffle.vim'
hook_add = '''
let g:vaffle_show_hidden_files = 1
nnoremap <Space>v :<C-u>Vaffle<CR>
autocmd MyAutoCmd FileType vaffle nmap <ESC> <Plug>(vaffle-quit)
'''

[[plugins]]
repo     = 'airblade/vim-rooter'

[[plugins]]
repo     = 'junegunn/fzf'
build    = './install --all'
merged   = 0

[[plugins]]
repo     = 'junegunn/fzf.vim'
depends  = ['fzf']
hook_add = '''
nnoremap <Space>p :<C-u>History<CR>
'''

# filetype
[[plugins]]
repo     = 'fatih/vim-go'
on_ft    = 'go'
hook_add = '''
autocmd MyAutoCmd FileType go nnoremap gr (go-run)
autocmd MyAutoCmd FileType go nnoremap gt (go-test)
autocmd MyAutoCmd FileType go :highlight goErr cterm=bold ctermfg=214
autocmd MyAutoCmd FileType go :match goErr /\<err\>/
autocmd MyAutoCmd FileType go set noexpandtab tabstop=4 shiftwidth=4
let g:go_hightlight_functions = 1
let g:go_hightlight_methods = 1
let g:go_hightlight_structs = 1
let g:go_hightlight_interfaces = 1
let g:go_hightlight_operators = 1
let g:go_hightlight_build_constraints = 1
let g:go_fmt_command = "goimports"
'''

[[plugins]]
repo     = 'cespare/vim-toml'
on_ft    = 'toml'

# other tools
[[plugins]]
repo     = 'kassio/neoterm'
if       = 'has("nvim")'
hook_add = '''
let g:neoterm_autoinsert = 1
silent! nnoremap <unique> <Space>t :<C-u>enew<CR>:Tnew<CR>
'''

[[plugins]]
repo     = 'mhinz/neovim-remote'
if       = 'has("nvim")'
hook_add = '''
let $VISUAL = 'nvr --remote-wait'
'''

[[plugins]]
repo     = 'kannokanno/previm'

[[plugins]]
repo     = 'lambdalisue/gina.vim'
